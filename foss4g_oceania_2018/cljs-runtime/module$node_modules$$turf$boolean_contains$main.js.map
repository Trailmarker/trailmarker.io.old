{
"version":3,
"file":"module$node_modules$$turf$boolean_contains$main.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@turf/boolean-contains/main.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$turf$boolean_contains$main\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar booleanPointInPolygon = _interopDefault(require('@turf/boolean-point-in-polygon'));\nvar calcBbox = _interopDefault(require('@turf/bbox'));\nvar isPointOnLine = _interopDefault(require('@turf/boolean-point-on-line'));\nvar invariant = require('@turf/invariant');\n\n/**\n * Boolean-contains returns True if the second geometry is completely contained by the first geometry.\n * The interiors of both geometries must intersect and, the interior and boundary of the secondary (geometry b)\n * must not intersect the exterior of the primary (geometry a).\n * Boolean-contains returns the exact opposite result of the `@turf/boolean-within`.\n *\n * @name booleanContains\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n * var point = turf.point([1, 2]);\n *\n * turf.booleanContains(line, point);\n * //=true\n */\nfunction booleanContains(feature1, feature2) {\n    var type1 = invariant.getType(feature1);\n    var type2 = invariant.getType(feature2);\n    var geom1 = invariant.getGeom(feature1);\n    var geom2 = invariant.getGeom(feature2);\n    var coords1 = invariant.getCoords(feature1);\n    var coords2 = invariant.getCoords(feature2);\n\n    switch (type1) {\n    case 'Point':\n        switch (type2) {\n        case 'Point':\n            return compareCoords(coords1, coords2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'MultiPoint':\n        switch (type2) {\n        case 'Point':\n            return isPointInMultiPoint(geom1, geom2);\n        case 'MultiPoint':\n            return isMultiPointInMultiPoint(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'LineString':\n        switch (type2) {\n        case 'Point':\n            return isPointOnLine(geom2, geom1, {ignoreEndVertices: true});\n        case 'LineString':\n            return isLineOnLine(geom1, geom2);\n        case 'MultiPoint':\n            return isMultiPointOnLine(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'Polygon':\n        switch (type2) {\n        case 'Point':\n            return booleanPointInPolygon(geom2, geom1, {ignoreBoundary: true});\n        case 'LineString':\n            return isLineInPoly(geom1, geom2);\n        case 'Polygon':\n            return isPolyInPoly(geom1, geom2);\n        case 'MultiPoint':\n            return isMultiPointInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    default:\n        throw new Error('feature1 ' + type1 + ' geometry not supported');\n    }\n}\n\nfunction isPointInMultiPoint(multiPoint, point) {\n    var i;\n    var output = false;\n    for (i = 0; i < multiPoint.coordinates.length; i++) {\n        if (compareCoords(multiPoint.coordinates[i], point.coordinates)) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n\nfunction isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n    for (var i = 0; i < multiPoint2.coordinates.length; i++) {\n        var matchFound = false;\n        for (var i2 = 0; i2 < multiPoint1.coordinates.length; i2++) {\n            if (compareCoords(multiPoint2.coordinates[i], multiPoint1.coordinates[i2])) {\n                matchFound = true;\n                break;\n            }\n        }\n        if (!matchFound) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction isMultiPointOnLine(lineString, multiPoint) {\n    var haveFoundInteriorPoint = false;\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (isPointOnLine(multiPoint.coordinates[i], lineString, {ignoreEndVertices: true})) {\n            haveFoundInteriorPoint = true;\n        }\n        if (!isPointOnLine(multiPoint.coordinates[i], lineString)) {\n            return false;\n        }\n    }\n    if (haveFoundInteriorPoint) {\n        return true;\n    }\n    return false;\n}\n\nfunction isMultiPointInPoly(polygon, multiPoint) {\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (!booleanPointInPolygon(multiPoint.coordinates[i], polygon, {ignoreBoundary: true})) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isLineOnLine(lineString1, lineString2) {\n    var haveFoundInteriorPoint = false;\n    for (var i = 0; i < lineString2.coordinates.length; i++) {\n        if (isPointOnLine({type: 'Point', coordinates: lineString2.coordinates[i]}, lineString1, { ignoreEndVertices: true })) {\n            haveFoundInteriorPoint = true;\n        }\n        if (!isPointOnLine({type: 'Point', coordinates: lineString2.coordinates[i]}, lineString1, {ignoreEndVertices: false })) {\n            return false;\n        }\n    }\n    return haveFoundInteriorPoint;\n}\n\nfunction isLineInPoly(polygon, linestring) {\n    var output = false;\n    var i = 0;\n\n    var polyBbox = calcBbox(polygon);\n    var lineBbox = calcBbox(linestring);\n    if (!doBBoxOverlap(polyBbox, lineBbox)) {\n        return false;\n    }\n    for (i; i < linestring.coordinates.length - 1; i++) {\n        var midPoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n        if (booleanPointInPolygon({type: 'Point', coordinates: midPoint}, polygon, { ignoreBoundary: true })) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n\n/**\n * Is Polygon2 in Polygon1\n * Only takes into account outer rings\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    var poly1Bbox = calcBbox(feature1);\n    var poly2Bbox = calcBbox(feature2);\n    if (!doBBoxOverlap(poly1Bbox, poly2Bbox)) {\n        return false;\n    }\n    for (var i = 0; i < feature2.coordinates[0].length; i++) {\n        if (!booleanPointInPolygon(feature2.coordinates[0][i], feature1)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction doBBoxOverlap(bbox1, bbox2) {\n    if (bbox1[0] > bbox2[0]) return false;\n    if (bbox1[2] < bbox2[2]) return false;\n    if (bbox1[1] > bbox2[1]) return false;\n    if (bbox1[3] < bbox2[3]) return false;\n    return true;\n}\n\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\n\nfunction getMidpoint(pair1, pair2) {\n    return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\n\nmodule.exports = booleanContains;\nmodule.exports.default = booleanContains;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_interopDefault","ex","booleanContains","feature1","feature2","type1","invariant","getType","type2","geom1","getGeom","geom2","coords1","getCoords","coords2","compareCoords","Error","output","i","coordinates","length","matchFound","i2","isPointOnLine","ignoreEndVertices","haveFoundInteriorPoint","type","booleanPointInPolygon","ignoreBoundary","polyBbox","calcBbox","lineBbox","doBBoxOverlap","midPoint","pair1","pair2","poly1Bbox","poly2Bbox","bbox1","bbox2","default"]
}
