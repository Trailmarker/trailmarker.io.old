shadow$provide.module$node_modules$$turf$random$main=function(global,process,require,module,exports,shadow$shims){function randomPosition(bbox){helpers.isObject(bbox)&&(bbox=bbox.bbox);if(bbox&&!Array.isArray(bbox))throw Error("bbox is invalid");return bbox?[Math.random()*(bbox[2]-bbox[0])+bbox[0],Math.random()*(bbox[3]-bbox[1])+bbox[1]]:[360*(Math.random()-.5),180*(Math.random()-.5)]}function vertexToCoordinate(hub){return function(cur){return[cur[0]+hub[0],cur[1]+hub[1]]}}Object.defineProperty(exports,
"__esModule",{value:!0});var helpers=require("module$node_modules$$turf$helpers$main");exports.randomPosition=randomPosition;exports.randomPoint=function(count,options){options=options||{};if(!helpers.isObject(options))throw Error("options is invalid");options=options.bbox;if(void 0===count||null===count)count=1;for(var features=[],i=0;i<count;i++)features.push(helpers.point(randomPosition(options)));return helpers.featureCollection(features)};exports.randomPolygon=function(count,options){function sumOffsets(cur,
index,arr){arr[index]=0<index?cur+arr[index-1]:cur}function scaleOffsets(cur){cur=2*cur*Math.PI/circle_offsets[circle_offsets.length-1];var radial_scaler=Math.random();vertices.push([radial_scaler*max_radial_length*Math.sin(cur),radial_scaler*max_radial_length*Math.cos(cur)])}options=options||{};if(!helpers.isObject(options))throw Error("options is invalid");var bbox=options.bbox,num_vertices=options.num_vertices,max_radial_length=options.max_radial_length;if(void 0===count||null===count)count=1;
helpers.isNumber(num_vertices)||(num_vertices=10);helpers.isNumber(max_radial_length)||(max_radial_length=10);options=[];for(var i=0;i<count;i++){var vertices=[],circle_offsets=Array.apply(null,Array(num_vertices+1)).map(Math.random);circle_offsets.forEach(sumOffsets);circle_offsets.forEach(scaleOffsets);vertices[vertices.length-1]=vertices[0];vertices=vertices.map(vertexToCoordinate(randomPosition(bbox)));options.push(helpers.polygon([vertices]))}return helpers.featureCollection(options)};exports.randomLineString=
function(count,options){options=options||{};if(!helpers.isObject(options))throw Error("options is invalid");var bbox=options.bbox,num_vertices=options.num_vertices,max_length=options.max_length;options=options.max_rotation;if(void 0===count||null===count)count=1;if(!helpers.isNumber(num_vertices)||2>num_vertices)num_vertices=10;helpers.isNumber(max_length)||(max_length=1E-4);helpers.isNumber(options)||(options=Math.PI/8);for(var features=[],i=0;i<count;i++){for(var vertices=[randomPosition(bbox)],
j=0;j<num_vertices-1;j++){var angle=(0===j?2*Math.random()*Math.PI:Math.tan((vertices[j][1]-vertices[j-1][1])/(vertices[j][0]-vertices[j-1][0])))+(Math.random()-.5)*options*2,distance=Math.random()*max_length;vertices.push([vertices[j][0]+distance*Math.cos(angle),vertices[j][1]+distance*Math.sin(angle)])}features.push(helpers.lineString(vertices))}return helpers.featureCollection(features)}}
//# sourceMappingURL=module$node_modules$$turf$random$main.js.map
