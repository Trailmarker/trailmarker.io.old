{
"version":3,
"file":"module$node_modules$$turf$boolean_clockwise$main.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAoBlIC,QAASA,iBAAgB,CAACC,IAAD,CAAO,CAE5B,GAAI,CAACA,IAAL,CAAW,KAAUC,MAAJ,CAAU,kBAAV,CAAN,CACX,IAAIC,KAAQF,IAAAG,SAAD,CAAkBH,IAAAG,SAAAD,KAAlB,CAAuCF,IAAAE,KAClD,IAAI,CAACE,KAAAC,QAAA,CAAcL,IAAd,CAAL,EAAqC,YAArC,GAA4BE,IAA5B,CAAmD,KAAUD,MAAJ,CAAU,+BAAV,CAAN,CAE/CK,IAAAA,CAAOC,SAAAC,UAAA,CAAoBR,IAApB,CACPS,KAAAA,CAAM,CAGV,KAFA,IAAIC,EAAI,CAAR,CACIC,IADJ,CACUC,GACV,CAAOF,CAAP,CAAWJ,IAAAO,OAAX,CAAA,CACIF,IAGA,CAHOC,GAGP,EAHcN,IAAA,CAAK,CAAL,CAGd,CAFAM,GAEA,CAFMN,IAAA,CAAKI,CAAL,CAEN,CADAD,IACA,GADSG,GAAA,CAAI,CAAJ,CACT,CADkBD,IAAA,CAAK,CAAL,CAClB,GAD8BC,GAAA,CAAI,CAAJ,CAC9B,CADuCD,IAAA,CAAK,CAAL,CACvC,EAAAD,CAAA,EAEJ,OAAa,EAAb,CAAOD,IAhBqB;AAjBhC,IAAIF,UAAYZ,OAAA,CAAQ,0CAAR,CAoChBC,OAAAC,QAAA,CAAiBE,gBACjBH,OAAAC,QAAAiB,QAAA,CAAyBf,gBAxCyG;",
"sources":["node_modules/@turf/boolean-clockwise/main.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$turf$boolean_clockwise$main\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar invariant = require('@turf/invariant');\n\n/**\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\n *\n * @name booleanClockwise\n * @param {Feature<LineString>} line to be evaluated\n * @returns {boolean} true/false\n * @example\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\n *\n * turf.booleanClockwise(clockwiseRing)\n * //=true\n * turf.booleanClockwise(counterClockwiseRing)\n * //=false\n */\nfunction booleanClockwise(line) {\n    // validation\n    if (!line) throw new Error('line is required');\n    var type = (line.geometry) ? line.geometry.type : line.type;\n    if (!Array.isArray(line) && type !== 'LineString') throw new Error('geometry must be a LineString');\n\n    var ring = invariant.getCoords(line);\n    var sum = 0;\n    var i = 1;\n    var prev, cur;\n    while (i < ring.length) {\n        prev = cur || ring[0];\n        cur = ring[i];\n        sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n        i++;\n    }\n    return sum > 0;\n}\n\nmodule.exports = booleanClockwise;\nmodule.exports.default = booleanClockwise;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","booleanClockwise","line","Error","type","geometry","Array","isArray","ring","invariant","getCoords","sum","i","prev","cur","length","default"]
}
